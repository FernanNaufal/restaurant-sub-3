{"version":3,"file":"app~7bd12dde.bundle.js","mappings":";0YACA,svNAIA,IAAQA,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IAwBF,QArB2B,CACnBC,WAAU,SAACC,GAAI,oGACdA,EAAI,CAAF,gEAGOP,EAAS,uCAAEQ,IAAIT,EAAmBQ,IAAE,0CAJ/B,EAKrB,EACME,kBAAiB,WAAG,iHACVT,EAAS,uCAAEU,OAAOX,IAAiB,0CADzB,EAE1B,EACMY,WAAU,SAACC,GAAS,oGACnBA,EAAQC,eAAe,MAAO,CAAF,gEAGnBb,EAAS,uCAAEc,IAAIf,EAAmBa,IAAO,0CAJ/B,EAK1B,EACMG,cAAa,SAACR,GAAI,iHACRP,EAAS,8CAASD,EAAmBQ,IAAE,0CAD/B,EAExB,+CCxBF,QALqB,CACnBS,YAAa,GAAF,OAAKnB,EAAAA,EAAAA,SAAe,QAC/BoB,OAAQ,SAACV,GAAE,gBAAQV,EAAAA,EAAAA,SAAe,kBAAUU,EAAE,sPCHhD,45NAcA,QAbwB,yBADxB,4FACwB,SADxB,QAMG,EALqB,EAUrB,OAXH,EACwB,OADxB,EACwB,mDACtB,sGACyBW,MAAMC,EAAAA,aAAyB,OAAxC,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,uFAED,WAA2BhB,GAAE,uFACJW,MAAMC,EAAAA,OAAoBZ,IAAI,OAAvC,OAARa,EAAW,EAAH,uBACPA,EAASC,QAAM,2CACvB,+CAXH,6DAWG,EAVqB,mCCSxB,QAXe,CACbG,SAAU,uCACVC,eAAgB,qDAEhBC,YAAY,IAAIC,MAAOC,cAEvBhC,cAAe,qBACfE,iBAAkB,EAClBC,kBAAmB,0ECFf8B,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,oBAC/BC,OAAQF,SAASC,cAAc,qBAC/BE,QAASH,SAASC,cAAc,kBAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACN,IAEAF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,IACF","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-catalog-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/thecatalogdb-source.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["/* eslint-disable consistent-return */\n/* eslint-disable no-prototype-builtins */\nimport { openDB } from 'idb';\nimport CONFIG from '../globals/config';\n\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\n\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n  upgrade(database) {\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n  },\n});\n\nconst FavoriteCatalogIdb = {\n  async getCatalog(id) {\n    if (!id) {\n      return;\n    }\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\n  },\n  async getAllCatalogList() {\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\n  },\n  async putCatalog(catalog) {\n    if (!catalog.hasOwnProperty('id')) {\n      return;\n    }\n    return (await dbPromise).put(OBJECT_STORE_NAME, catalog);\n  },\n  async deleteCatalog(id) {\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\n  },\n};\n\nexport default FavoriteCatalogIdb;\n","import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  NOW_PLAYING: `${CONFIG.BASE_URL}list`,\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","import API_ENDPOINT from '../globals/api-endpoint';\n\nclass TheCatalogDbSource {\n  static async nowPlayingCatalogList() {\n    const response = await fetch(API_ENDPOINT.NOW_PLAYING);\n    const responseJson = await response.json();\n    return responseJson.restaurants;\n  }\n\n  static async detailCatalog(id) {\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\n    return response.json();\n  }\n}\n\nexport default TheCatalogDbSource;\n","const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/medium/',\r\n\r\n  CACHE_NAME: new Date().toISOString(),\r\n\r\n  DATABASE_NAME: 'catalogue-database',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'catalog_list',\r\n};\r\n\r\nexport default CONFIG;\r\n","import 'regenerator-runtime';\nimport '../styles/styles.css';\nimport '../styles/responsive.css';\nimport App from './views/app';\nimport swRegister from './utils/sw-register';\n\nconst app = new App({\n  button: document.querySelector('#hamburgerButton'),\n  drawer: document.querySelector('#navigationDrawer'),\n  content: document.querySelector('#mainContent'),\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n\nwindow.addEventListener('load', () => {\n  app.renderPage();\n  swRegister();\n});\n"],"names":["DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getCatalog","id","get","getAllCatalogList","getAll","putCatalog","catalog","hasOwnProperty","put","deleteCatalog","NOW_PLAYING","DETAIL","fetch","API_ENDPOINT","response","json","responseJson","restaurants","BASE_URL","BASE_IMAGE_URL","CACHE_NAME","Date","toISOString","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}